
type Mutation 
	{
	  signup(email: String!, password: String!, name: String!): AuthPayload
	  login(email: String!, password: String!): AuthPayload
	  createDraft(title: String!, content: String): Post
	  createPost(title: String!, content: String): Post
	  createLomba(lomba: String!, ketlomba: String): Lomba
	  deletePost(id: ID!): Post
	  publish(id: ID!): Post
}

type Post {
  id: ID!
  title: String!
  content: String!
  published: Boolean!
}



type User {
  id: ID! 
  name: String!
  email: String! 
  accessRole: String!
}

type newUser {
  id: ID! 
  name: String!
  email: String! 
  accessRole: String!
}

type Comment {
  id: ID! 
  createdAt: String! 
  text: String!
  writtenBy: User!
}

type Diskusi {
  id: ID! 
  createdAt: String! 
  judul: String!
  isi: String!
  writtenBy: User!
}

type Lomba {
  id: ID 
  createdAt: String 
  lomba: String
  ketlomba: String
  
}


type File {
  id: ID!
  createdAt: String! 
  file: String!
  writtenBy: User!
}


type Query {
  user(id: ID): User
  comment(id: ID): Comment
  diskusi(id: ID): Diskusi
  viewlomba: [Lomba!]!
  file(id: ID): [File]
  getAllLomba : [Lomba]
  
}